<%- assert_locals gem -%>
<%= render partial: "shared/header" -%>

require "helper"
require "<%= gem.namespace_require %>"
require "gapic/common"
<%- if gem.generate_grpc_clients? -%>
require "gapic/grpc"
<%- end -%>
<%- if gem.generate_rest_clients? -%>
require "gapic/rest"
<%- end -%>

class <%= gem.namespace %>::ClientConstructionMinitest < Minitest::Test
  class DummyStub
    def endpoint
      "endpoint.example.com"
    end

    def universe_domain
      "example.com"
    end
  end

<%- start_line_spacer -%>
<%- gem.services.each do |service| -%>
<%- if service.generate_grpc_clients? -%>
<%= line_spacer %>  def test_<%= service.factory_method_name %>_grpc
    Gapic::ServiceStub.stub :new, DummyStub.new do
      grpc_channel = GRPC::Core::Channel.new "localhost:8888", nil, :this_channel_is_insecure
      client = <%= gem.namespace %>.<%= service.factory_method_name %><% if service.supports_multiple_transports? %> transport: :grpc<% end %> do |config|
        config.credentials = grpc_channel
      end
      assert_kind_of <%= gem.namespaced_class "#{service.module_name}::#{service.client_name}", version: gem.default_version %>, client
    end
  end
<%- end -%>
<%- if service.generate_rest_clients? -%>
<%= line_spacer %>  def test_<%= service.factory_method_name %>_rest
    Gapic::Rest::ClientStub.stub :new, DummyStub.new do
      client = <%= gem.namespace %>.<%= service.factory_method_name %><% if service.supports_multiple_transports? %> transport: :rest<% end %> do |config|
        config.credentials = :dummy_credentials
      end
      assert_kind_of <%= gem.namespaced_class "#{service.module_name}::Rest::#{service.client_name}", version: gem.default_version %>, client
    end
  end
<%- end -%>
<%- end -%>
end
