<%- assert_locals method -%>
##
# @private
#
# GRPC transcoding helper method for the <%= method.name %> REST call
#
# @param request_pb [<%= method.request_type %>]
#   A request object representing the call parameters. Required.
<%- if method.service.rest.is_main_mixin_service? -%>
# @param bindings_override [::Array<::Gapic::Rest::GrpcTranscoder::HttpBinding>, nil]
#   Binding overrides for the transcoding.
<%- end %>
# @return [Array(String, [String, nil], Hash{String => String})]
#   Uri, Body, Query string parameters
<%- boverr_str = method.service.rest.is_main_mixin_service? ? ", bindings_override: nil" : "" -%>
def self.<%= method.rest.transcoding_helper_name %> request_pb<%= boverr_str %>
  <%- if method.service.rest.is_main_mixin_service? -%>
  transcoder = Gapic::Rest::GrpcTranscoder.new(bindings_override) if bindings_override
  <%- end %>
  <%- assignment = method.service.rest.is_main_mixin_service? ? "||=" : "=" -%>
  transcoder <%= assignment %> Gapic::Rest::GrpcTranscoder.new
  <%- method.http_bindings.each do |http_binding| -%>
                                            .with_bindings(
                                              uri_method: :<%= http_binding.verb %>,
                                              uri_template: "<%= http_binding.uri_for_transcoding %>",
                                            <%- if http_binding.body? -%>
                                              body: "<%= http_binding.body %>",
                                            <%- end -%>
                                              matches: [
                                            <%- http_binding.routing_params_transcoder_matches_strings.each do |match_str| -%>
                                                <%= match_str %>
                                            <%- end -%>
                                              ]
                                            )
  <%- end %>
  transcoder.transcode request_pb
end
