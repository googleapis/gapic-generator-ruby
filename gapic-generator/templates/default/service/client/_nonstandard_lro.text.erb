<%- assert_locals service -%>
<% @requires = capture do %>
require "gapic/operation/retry_policy"
require "gapic/generic_lro/operation"
<% end %>

# A module containing nonstandard lro helpers
module <%= service.nonstandard_lro_name %> 
  class << self
    ##
    # Creates a Generic LRO operation object that wraps the nonstandard
    # long-running operation specific to this service.
    #
    # @param operation [Object] The long-running operation object that is returned by the initial method call.
    #
    # @param client [<%= service.usable_service_presenter.client_name_full %>] The client that handles the polling for the longrunning operation.
    #
    # @param request_values [Map<String, String>] The values that are to be copied from the request that
    #   triggered the longrunning operation, into the request that polls for the longrunning operation.
    #   The format is `name of the request field -> value`
    #
    # @param options [Gapic::CallOptions] call options for this operation
    #
    # @return [Gapic::GenericLRO::Operation] 
    #
    def create_operation operation:, client:, request_values:, options:
      Gapic::GenericLRO::Operation.new(operation,
        client: client,
        polling_method_name: "<%= service.nonstandard_lro_polling_method_name %>",
        request_values: request_values,
        operation_status_field: "<%= service.nonstandard_lro.operation_status_field %>",
        <%- if service.nonstandard_lro.operation_name_field -%>
        operation_name_field: "<%= service.nonstandard_lro.operation_name_field %>",
        <%- end -%>
        <%- if service.nonstandard_lro.operation_err_code_field -%>
        operation_err_code_field: "<%= service.nonstandard_lro.operation_err_code_field %>",
        <%- end -%>
        <%- if service.nonstandard_lro.operation_err_msg_field -%>
        operation_err_msg_field: "<%= service.nonstandard_lro.operation_err_msg_field %>",
        <%- end -%>
        <%- if service.nonstandard_lro.operation_response_fields.any? -%>
        operation_copy_fields: {
          <%- service.nonstandard_lro.operation_response_fields.each_with_index do |(field_from, field_to), i| -%>
          <%- if i == service.nonstandard_lro.operation_response_fields.length - 1 -%>
          "<%= field_to %>" => "<%= field_from %>"
          <%- else -%>
          "<%= field_to %>" => "<%= field_from %>",
          <%- end -%>
          <%- end -%>
        },
        <%- else -%>
        operation_copy_fields: {},
        <%- end -%>
        options: options)
    end
  end
end
