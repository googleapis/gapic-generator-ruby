# frozen_string_literal: true

# The MIT License (MIT)
#
# Copyright <YEAR> <COPYRIGHT HOLDER>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!


module Google
  module Api
    # Rich semantic information of an API field beyond basic typing.
    # @!attribute [rw] format
    #   @return [::Google::Api::FieldInfo::Format]
    #     The standard format of a field value. This does not explicitly configure
    #     any API consumer, just documents the API's format for the field it is
    #     applied to.
    class FieldInfo
      include ::Google::Protobuf::MessageExts
      extend ::Google::Protobuf::MessageExts::ClassMethods

      # The standard format of a field value. The supported formats are all backed
      # by either an RFC defined by the IETF or a Google-defined AIP.
      module Format
        # Default, unspecified value.
        FORMAT_UNSPECIFIED = 0

        # Universally Unique Identifier, version 4, value as defined by
        # https://datatracker.ietf.org/doc/html/rfc4122. The value may be
        # normalized to entirely lowercase letters. For example, the value
        # `F47AC10B-58CC-0372-8567-0E02B2C3D479` would be normalized to
        # `f47ac10b-58cc-0372-8567-0e02b2c3d479`.
        UUID4 = 1

        # Internet Protocol v4 value as defined by [RFC
        # 791](https://datatracker.ietf.org/doc/html/rfc791). The value may be
        # condensed, with leading zeros in each octet stripped. For example,
        # `001.022.233.040` would be condensed to `1.22.233.40`.
        IPV4 = 2

        # Internet Protocol v6 value as defined by [RFC
        # 2460](https://datatracker.ietf.org/doc/html/rfc2460). The value may be
        # normalized to entirely lowercase letters with zeros compressed, following
        # [RFC 5952](https://datatracker.ietf.org/doc/html/rfc5952). For example,
        # the value `2001:0DB8:0::0` would be normalized to `2001:db8::`.
        IPV6 = 3

        # An IP address in either v4 or v6 format as described by the individual
        # values defined herein. See the comments on the IPV4 and IPV6 types for
        # allowed normalizations of each.
        IPV4_OR_IPV6 = 4
      end
    end
  end
end
