# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/showcase/v1beta1/messaging.proto for package 'google.showcase.v1beta1'
# Original file comments:
# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/showcase/v1beta1/messaging_pb'

module Google
  module Showcase
    module V1beta1
      module Messaging
        # A simple messaging service that implements chat rooms and profile posts.
        #
        # This messaging service showcases the features that API clients
        # generated by gapic-generators implement.
        class Service

          include GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'google.showcase.v1beta1.Messaging'

          # Creates a room.
          rpc :CreateRoom, Google::Showcase::V1beta1::CreateRoomRequest, Google::Showcase::V1beta1::Room
          # Retrieves the Room with the given resource name.
          rpc :GetRoom, Google::Showcase::V1beta1::GetRoomRequest, Google::Showcase::V1beta1::Room
          # Updates a room.
          rpc :UpdateRoom, Google::Showcase::V1beta1::UpdateRoomRequest, Google::Showcase::V1beta1::Room
          # Deletes a room and all of its blurbs.
          rpc :DeleteRoom, Google::Showcase::V1beta1::DeleteRoomRequest, Google::Protobuf::Empty
          # Lists all chat rooms.
          rpc :ListRooms, Google::Showcase::V1beta1::ListRoomsRequest, Google::Showcase::V1beta1::ListRoomsResponse
          # Creates a blurb. If the parent is a room, the blurb is understood to be a
          # message in that room. If the parent is a profile, the blurb is understood
          # to be a post on the profile.
          rpc :CreateBlurb, Google::Showcase::V1beta1::CreateBlurbRequest, Google::Showcase::V1beta1::Blurb
          # Retrieves the Blurb with the given resource name.
          rpc :GetBlurb, Google::Showcase::V1beta1::GetBlurbRequest, Google::Showcase::V1beta1::Blurb
          # Updates a blurb.
          rpc :UpdateBlurb, Google::Showcase::V1beta1::UpdateBlurbRequest, Google::Showcase::V1beta1::Blurb
          # Deletes a blurb.
          rpc :DeleteBlurb, Google::Showcase::V1beta1::DeleteBlurbRequest, Google::Protobuf::Empty
          # Lists blurbs for a specific chat room or user profile depending on the
          # parent resource name.
          rpc :ListBlurbs, Google::Showcase::V1beta1::ListBlurbsRequest, Google::Showcase::V1beta1::ListBlurbsResponse
          # This method searches through all blurbs across all rooms and profiles
          # for blurbs containing to words found in the query. Only posts that
          # contain an exact match of a queried word will be returned.
          rpc :SearchBlurbs, Google::Showcase::V1beta1::SearchBlurbsRequest, Google::Longrunning::Operation
          # This returns a stream that emits the blurbs that are created for a
          # particular chat room or user profile.
          rpc :StreamBlurbs, Google::Showcase::V1beta1::StreamBlurbsRequest, stream(Google::Showcase::V1beta1::StreamBlurbsResponse)
          # This is a stream to create multiple blurbs. If an invalid blurb is
          # requested to be created, the stream will close with an error.
          rpc :SendBlurbs, stream(Google::Showcase::V1beta1::CreateBlurbRequest), Google::Showcase::V1beta1::SendBlurbsResponse
          # This method starts a bidirectional stream that receives all blurbs that
          # are being created after the stream has started and sends requests to create
          # blurbs. If an invalid blurb is requested to be created, the stream will
          # close with an error.
          rpc :Connect, stream(Google::Showcase::V1beta1::ConnectRequest), stream(Google::Showcase::V1beta1::StreamBlurbsResponse)
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
